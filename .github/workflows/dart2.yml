name: iOS-ipa-build

on:
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
          bundler-cache: true
      
      - name: Cache CocoaPods
        uses: actions/cache@v3
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64
          cache: true
      
      - name: Flutter version
        run: flutter --version
      
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            **/.dart_tool
            **/.flutter-plugins
            **/.flutter-plugins-dependencies
            **/build
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-
      
      - name: Update Podfile
        run: |
          cat > ios/Podfile << 'EOF'
          # use_frameworks! :linkage => :static
          source 'https://cdn.cocoapods.org/'
          platform :ios, '14.0'
          
          install! 'cocoapods',
            :deterministic_uuids => false,
            :warn_for_unused_master_specs_repo => false
          
          project 'Runner', {
            'Debug' => :debug,
            'Profile' => :release,
            'Release' => :release,
          }
          
          def flutter_root
            generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
            unless File.exist?(generated_xcode_build_settings_path)
              raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
            end
          
            File.foreach(generated_xcode_build_settings_path) do |line|
              matches = line.match(/FLUTTER_ROOT\=(.*)/)
              return matches[1].strip if matches
            end
          
            raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
          end
          
          require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)
          
          flutter_ios_podfile_setup
          
          target 'Runner' do
            use_frameworks!
            use_modular_headers!
          
            pod 'DKImagePickerController', '~> 4.3'
            pod 'PhoneNumberKit', '~> 3.3.4', :modular_headers => true
          
            flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
          end
          
          post_install do |installer|
            installer.pods_project.targets.each do |target|
              flutter_additional_ios_build_settings(target)
              target.build_configurations.each do |config|
                config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'
                config.build_settings['DEFINES_MODULE'] = 'YES'
                config.build_settings['SWIFT_VERSION'] = '5.0'
                config.build_settings['ENABLE_BITCODE'] = 'NO'
                config.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'NO'
                config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'NO'
                config.build_settings['SWIFT_OBJC_BRIDGING_HEADER'] = nil
                config.build_settings['CLANG_ENABLE_MODULES'] = 'YES'
                config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
                config.build_settings['VALID_ARCHS'] = 'arm64 x86_64'
                config.build_settings['FRAMEWORK_SEARCH_PATHS'] = '$(inherited) $(FLUTTER_FRAMEWORK_DIR)'
                
                # Add these for M1 compatibility
                config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
              end
            end
          end
          EOF

      - name: Clean iOS build
        run: |
          cd ios
          rm -rf Pods Podfile.lock
          rm -rf ~/Library/Developer/Xcode/DerivedData/*
          cd ..
          flutter clean
        
      - name: Install Flutter dependencies
        run: flutter pub get
        
      - name: Install CocoaPods
        run: |
          gem install cocoapods -v 1.13.0
          pod repo update
          
      - name: Pod Install
        run: |
          cd ios
          pod install --repo-update
        env:
          LANG: en_US.UTF-8
          
      - name: Set Xcode version
        run: sudo xcode-select -s /Applications/Xcode.app
        
      - name: Build iOS ðŸ’¡
        run: |
          flutter build ios --release --no-codesign --verbose
        env:
          DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
          FLUTTER_BUILD_NUMBER: ${{ github.run_number }}
          
      - name: Create Payload directory
        run: mkdir Payload
        working-directory: build/ios/iphoneos
        
      - name: Move app to Payload
        run: mv Runner.app Payload/
        working-directory: build/ios/iphoneos
        
      - name: Create IPA
        run: zip -r FlutterIpaExport.ipa Payload
        working-directory: build/ios/iphoneos
        
      - name: Upload IPA
        uses: actions/upload-artifact@v3
        with:
          name: ios-build
          path: build/ios/iphoneos/FlutterIpaExport.ipa
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build/ios/iphoneos/FlutterIpaExport.ipa
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v1.0.${{ github.run_number }}
          name: Release v1.0.${{ github.run_number }}
          draft: false
          prerelease: false
