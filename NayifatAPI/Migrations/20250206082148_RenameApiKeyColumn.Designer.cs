// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NayifatAPI.Data;

#nullable disable

namespace NayifatAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250206082148_RenameApiKeyColumn")]
    partial class RenameApiKeyColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NayifatAPI.Controllers.ApiKey", b =>
                {
                    b.Property<string>("api_Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("LastUsedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("api_Key");

                    b.ToTable("ApiKeys");
                });

            modelBuilder.Entity("NayifatAPI.Models.AuthLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AuthType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FailureReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("NationalId", "CreatedAt");

                    b.ToTable("AuthLogs");
                });

            modelBuilder.Entity("NayifatAPI.Models.BankCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationFlag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicationStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EligibleAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EligibleEmi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EligibleStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ErrCode")
                        .HasColumnType("int");

                    b.Property<string>("ErrMsg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SuccessMsg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("NationalId");

                    b.HasIndex("RequestId")
                        .IsUnique();

                    b.ToTable("bank_customers", (string)null);
                });

            modelBuilder.Entity("NayifatAPI.Models.CardApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("card_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicationNo")
                        .HasColumnType("int")
                        .HasColumnName("application_no");

                    b.Property<decimal>("CardLimit")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("card_limit");

                    b.Property<string>("CardType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("card_type");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("national_id");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("note");

                    b.Property<string>("NoteUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("noteUser");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("remarks");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<DateTime>("StatusDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("status_date");

                    b.HasKey("Id");

                    b.HasIndex("NationalId");

                    b.ToTable("card_application_details");
                });

            modelBuilder.Entity("NayifatAPI.Models.CitizenAddressListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdditionalNumber")
                        .HasColumnType("int");

                    b.Property<int>("BuildingNumber")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsPrimaryAddress")
                        .HasColumnType("bit");

                    b.Property<string>("LocationCoordinates")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PostCode")
                        .HasColumnType("int");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UnitNumber")
                        .HasColumnType("int");

                    b.Property<int>("YakeenCitizenAddressId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("YakeenCitizenAddressId");

                    b.ToTable("CitizenAddressListItem");
                });

            modelBuilder.Entity("NayifatAPI.Models.Customer", b =>
                {
                    b.Property<string>("NationalId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Consent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ConsentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Dependents")
                        .HasColumnType("int");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamilyNameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamilyNameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstNameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstNameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Iban")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IdExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Los")
                        .HasColumnType("int");

                    b.Property<string>("Mpin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MpinEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("NafathStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NafathTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("SalaryCustomer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SalaryDakhli")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SecondNameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondNameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdNameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdNameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zipcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NationalId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("NayifatAPI.Models.CustomerDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("BiometricEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("BiometricToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LastUsedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OsVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("NationalId", "DeviceId")
                        .IsUnique();

                    b.ToTable("Customer_Devices");
                });

            modelBuilder.Entity("NayifatAPI.Models.LeadAppCard", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("national_id")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("national_id");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("phone");

                    b.Property<string>("status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("PENDING")
                        .HasColumnName("status");

                    b.Property<DateTime>("status_timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("status_timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("id");

                    b.HasIndex("national_id");

                    b.ToTable("lead_apps_cards", (string)null);
                });

            modelBuilder.Entity("NayifatAPI.Models.LeadAppLoan", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("national_id")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("national_id");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("phone");

                    b.Property<string>("status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("PENDING")
                        .HasColumnName("status");

                    b.Property<DateTime>("status_timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("status_timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("id");

                    b.HasIndex("national_id");

                    b.ToTable("lead_apps_loans", (string)null);
                });

            modelBuilder.Entity("NayifatAPI.Models.LoanApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("loan_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("loan_amount");

                    b.Property<int>("ApplicationNo")
                        .HasColumnType("int")
                        .HasColumnName("application_no");

                    b.Property<string>("CustomerDecision")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("customerDecision");

                    b.Property<decimal?>("InterestRate")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("interest_rate");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("national_id");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("note");

                    b.Property<string>("NoteUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("noteUser");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("loan_purpose");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("remarks");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<DateTime>("StatusDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("status_date");

                    b.Property<int?>("Tenure")
                        .HasColumnType("int")
                        .HasColumnName("loan_tenure");

                    b.HasKey("Id");

                    b.HasIndex("NationalId");

                    b.ToTable("loan_application_details");
                });

            modelBuilder.Entity("NayifatAPI.Models.MasterConfig", b =>
                {
                    b.Property<int>("ConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("config_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConfigId"));

                    b.Property<string>("KeyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("key_name");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_updated");

                    b.Property<string>("Page")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("page");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("value");

                    b.HasKey("ConfigId");

                    b.HasIndex("Page", "KeyName")
                        .IsUnique();

                    b.ToTable("master_config", (string)null);
                });

            modelBuilder.Entity("NayifatAPI.Models.NotificationTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalData")
                        .HasColumnType("json")
                        .HasColumnName("additional_data");

                    b.Property<string>("BigPictureUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_picture_url");

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<string>("BodyAr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("body_ar");

                    b.Property<string>("BodyEn")
                        .HasColumnType("text")
                        .HasColumnName("body_en");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("ExpiryAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("expiry_at");

                    b.Property<string>("LargeIconUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("large_icon_url");

                    b.Property<string>("Route")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TargetCriteria")
                        .HasColumnType("json")
                        .HasColumnName("target_criteria");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TitleAr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title_ar");

                    b.Property<string>("TitleEn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title_en");

                    b.HasKey("Id");

                    b.ToTable("notification_templates", (string)null);
                });

            modelBuilder.Entity("NayifatAPI.Models.OtpCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("otp_code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("expires_at");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit")
                        .HasColumnName("is_used");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("national_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UsedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("used_at");

                    b.HasKey("Id");

                    b.HasIndex("ExpiresAt");

                    b.HasIndex("NationalId", "Type", "IsUsed");

                    b.ToTable("OTP_Codes");
                });

            modelBuilder.Entity("NayifatAPI.Models.UserNotification", b =>
                {
                    b.Property<string>("NationalId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("national_id");

                    b.Property<DateTime>("LastUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("last_updated")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Notifications")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notifications");

                    b.HasKey("NationalId");

                    b.ToTable("user_notifications");
                });

            modelBuilder.Entity("NayifatAPI.Models.YakeenCitizenAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLanguage")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("DateOfBirthHijri")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("IqamaNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LogId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IqamaNumber");

                    b.ToTable("YakeenCitizenAddress");
                });

            modelBuilder.Entity("NayifatAPI.Models.YakeenCitizenInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DateOfBirthHijri")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EnglishFirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EnglishLastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EnglishSecondName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EnglishThirdName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("GenderFieldSpecified")
                        .HasColumnType("bit");

                    b.Property<string>("GrandFatherName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HifizaIssuePlace")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HifizaNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdExpiryDate")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("IdIssueDate")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("IdIssuePlace")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdVersionNumber")
                        .HasColumnType("int");

                    b.Property<string>("IqamaNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LogIdField")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfVehiclesReg")
                        .HasColumnType("int");

                    b.Property<string>("OccupationCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SocialStatusDetailedDesc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubtribeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TotalNumberOfCurrentDependents")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IqamaNumber");

                    b.ToTable("YakeenCitizenInfo");
                });

            modelBuilder.Entity("NayifatAPI.Models.AuthLog", b =>
                {
                    b.HasOne("NayifatAPI.Models.Customer", null)
                        .WithMany("AuthLogs")
                        .HasForeignKey("NationalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NayifatAPI.Models.CardApplication", b =>
                {
                    b.HasOne("NayifatAPI.Models.Customer", "Customer")
                        .WithMany("CardApplications")
                        .HasForeignKey("NationalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("NayifatAPI.Models.CitizenAddressListItem", b =>
                {
                    b.HasOne("NayifatAPI.Models.YakeenCitizenAddress", "YakeenCitizenAddress")
                        .WithMany("CitizenAddressLists")
                        .HasForeignKey("YakeenCitizenAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("YakeenCitizenAddress");
                });

            modelBuilder.Entity("NayifatAPI.Models.CustomerDevice", b =>
                {
                    b.HasOne("NayifatAPI.Models.Customer", "Customer")
                        .WithMany("Devices")
                        .HasForeignKey("NationalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("NayifatAPI.Models.LoanApplication", b =>
                {
                    b.HasOne("NayifatAPI.Models.Customer", "Customer")
                        .WithMany("LoanApplications")
                        .HasForeignKey("NationalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("NayifatAPI.Models.OtpCode", b =>
                {
                    b.HasOne("NayifatAPI.Models.Customer", null)
                        .WithMany("OtpCodes")
                        .HasForeignKey("NationalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NayifatAPI.Models.UserNotification", b =>
                {
                    b.HasOne("NayifatAPI.Models.Customer", null)
                        .WithMany("Notifications")
                        .HasForeignKey("NationalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NayifatAPI.Models.Customer", b =>
                {
                    b.Navigation("AuthLogs");

                    b.Navigation("CardApplications");

                    b.Navigation("Devices");

                    b.Navigation("LoanApplications");

                    b.Navigation("Notifications");

                    b.Navigation("OtpCodes");
                });

            modelBuilder.Entity("NayifatAPI.Models.YakeenCitizenAddress", b =>
                {
                    b.Navigation("CitizenAddressLists");
                });
#pragma warning restore 612, 618
        }
    }
}
