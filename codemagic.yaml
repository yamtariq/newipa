workflows:
  ios-workflow:
    name: iOS Workflow
    max_build_duration: 120
    instance_type: mac_mini_m2
    environment:
      flutter: stable
      xcode: latest
      ruby: 3.2.2
      cocoapods: 1.14.3
      vars:
        BUNDLE_ID: "com.nayifat.app2025"
        XCODE_WORKSPACE: "Runner.xcworkspace"
        XCODE_SCHEME: "Runner"
        PLATFORM: "ios"
        MIN_IOS_VERSION: "14.0"
    cache:
      cache_paths:
        - ~/.pub-cache
        - vendor/bundle
    scripts:
      - name: Set up environment ðŸ’¡
        script: |
          flutter doctor -v
          flutter --version
          xcodebuild -version
          gem update --system
          gem install bundler
          gem uninstall cocoapods --all --ignore-dependencies
          gem install cocoapods -v 1.14.3
          pod setup
          pod --version
          ruby --version
      - name: Clean and prepare ðŸ’¡
        script: |
          echo "Current directory: $PWD"
          rm -rf build
          rm -rf ios/Pods
          rm -rf ios/Podfile.lock
          rm -rf ios/.symlinks
          rm -rf ios/Flutter/Flutter.framework
          rm -rf ios/Flutter/Flutter.podspec
          flutter clean
          flutter pub get
      - name: Setup iOS project ðŸ’¡
        script: |
          flutter create . --platforms=ios
          cd ios
          rm -f Podfile
          rm -f Podfile.lock
          mkdir -p Runner
          
          # Create BackgroundTaskHandler.swift
          cat > Runner/BackgroundTaskHandler.swift << 'EOF'
          import Foundation
          import BackgroundTasks

          class BackgroundTaskHandler {
              static let shared = BackgroundTaskHandler()
              
              private init() { }
              
              func handleTask(_ task: BGAppRefreshTask) {
                  task.setTaskCompleted(success: true)
              }
              
              func scheduleTask() {
                  let request = BGAppRefreshTaskRequest(identifier: "com.nayifat.app.notification_refresh")
                  request.earliestBeginDate = Date(timeIntervalSinceNow: 15 * 60)
                  do {
                      try BGTaskScheduler.shared.submit(request)
                  } catch {
                      print("Failed to schedule background task: \(error)")
                  }
              }
          }
          EOF
          
          # Create Podfile
          cat > Podfile << 'EOF'
          platform :ios, '14.0'

          # CocoaPods analytics sends network stats synchronously affecting flutter build latency.
          ENV['COCOAPODS_DISABLE_STATS'] = 'true'

          project 'Runner', {
            'Debug' => :debug,
            'Profile' => :release,
            'Release' => :release,
          }

          def flutter_root
            generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
            unless File.exist?(generated_xcode_build_settings_path)
              raise "#{generated_xcode_build_settings_path} must exist. If you are running pod install manually, make sure flutter pub get is executed first"
            end

            File.foreach(generated_xcode_build_settings_path) do |line|
              matches = line.match(/FLUTTER_ROOT\=(.*)/)
              return matches[1].strip if matches
            end
            raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
          end

          require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

          flutter_ios_podfile_setup

          target 'Runner' do
            use_frameworks!
            use_modular_headers!

            flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
            
            # Add PhoneNumberKit dependency ðŸ’¡
            pod 'PhoneNumberKit', '~> 3.7'
          end

          post_install do |installer|
            installer.pods_project.targets.each do |target|
              flutter_additional_ios_build_settings(target)
              target.build_configurations.each do |config|
                config.build_settings['ENABLE_BITCODE'] = 'NO'
                config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'
                config.build_settings['SWIFT_VERSION'] = '5.0'
                config.build_settings['DEFINES_MODULE'] = 'YES'
                
                # Apply module settings only to PhoneNumberKit ðŸ’¡
                if target.name == 'PhoneNumberKit'
                  config.build_settings['SWIFT_EMIT_MODULE_INTERFACE'] = 'NO'
                  config.build_settings['DEFINES_MODULE'] = 'NO'
                end
                
                # Configure Runner target settings
                if target.name == 'Runner'
                  config.build_settings['SWIFT_OBJC_BRIDGING_HEADER'] = ''
                  config.build_settings['SWIFT_OBJC_INTERFACE_HEADER_NAME'] = ''
                  config.build_settings['SWIFT_INSTALL_OBJC_HEADER'] = 'NO'
                  config.build_settings['SWIFT_EMIT_MODULE_INTERFACE'] = 'NO'
                  config.build_settings['DEFINES_MODULE'] = 'NO'
                  config.build_settings['SWIFT_PRECOMPILE_BRIDGING_HEADER'] = 'NO'
                end
              end
            end
          end
          EOF
          
          cd ..
          flutter pub get
      - name: Install CocoaPods dependencies ðŸ’¡
        script: |
          cd ios
          pod repo update
          rm -rf Pods
          rm -f Podfile.lock
          flutter pub get
          rm -rf Flutter/GeneratedPluginRegistrant.*
          flutter pub get
          pod install --verbose --repo-update
          # Remove module interface flags from xcodebuild command
          xcodebuild -workspace Runner.xcworkspace -scheme Runner -configuration Debug clean build
          cd ..
      - name: Build iOS ðŸ’¡
        script: | 
          flutter build ios --debug --no-codesign --verbose
    artifacts:
      - build/ios/iphoneos/Runner.app
      - ios/Pods/Manifest.lock
      - ios/Podfile.lock
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - ios/build/Runner.build/Debug-iphoneos/Runner.build/build-state.dat
    publishing:
      email:
        recipients:
          - yamtariq@gmail.com
        notify:
          success: true
          failure: true
